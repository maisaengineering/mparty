- paginated_products = @searcher.retrieve_products if params.key?(:keywords)
- paginated_products ||= products
.col-md-9.products_list.wishable_products
  - if products.empty?
    = Spree.t(:no_products_found)
  - elsif params.key?(:keywords)
    %h6.search-results-title= Spree.t(:search_results, :keywords => h(params[:keywords]))
  - if products.any?
    %h4= link_to taxon.name, seo_url(taxon), :class => 'breadcrumbs' if taxon
    - products.in_groups_of(3, false) do |row_products|
      .row.mbottom40
        - for product in row_products
          - url = spree.product_url(product, :taxon_id => @taxon.try(:id),event_id: @event.id)
          .col-md-4.product{id: "product_#{ product.id}"}
            %a{:href => "#{url}"}
              .product_block
                %h4= truncate(product.name, :length => 50)
                = large_image(product, :itemprop => "image")
                %p= number_to_currency(product.price, unit: get_currency_symbol)
            - if wishlist.wished_products.where(variant_id: product.master.id).exists?
              .product_added_btn.add_product_to_wishlist_btn{data: {event_id: @event.id,variant_id: product.master.id}}
                %span.glyphicon.glyphicon-ok.remove
            - else
              .product_add_btn.add_product_to_wishlist_btn{data: {event_id: @event.id,variant_id: product.master.id}}
                %span.glyphicon.glyphicon-plus.add
  - if paginated_products.respond_to?(:num_pages)
    = paginate paginated_products
:javascript
  $('.wishable_products .add_product_to_wishlist_btn').click(function (e){
    e.preventDefault()
    $this = $(this)

    if($(this).find('span').first().hasClass('add')){ // Add product to wishlist
      var url = '/event/'+$(this).data('event-id')+'/wishlist/add_product'
      var data = {variant_id: $(this).data('variant-id')}
      $.ajax({
          type: "POST",
          url: url,
          data: data,
          beforeSend: function(){  $('.loading-indicator').fadeIn('slow') },
          success: function(res) {
            $this.removeClass('product_add_btn').addClass('product_added_btn')
            $this.find('span:first').removeClass('glyphicon-plus add').addClass('glyphicon-ok remove');
            $("#wishlist-count").text(parseInt($("#wishlist-count").text()) + 1);
            $(".wishlist_modal_count").text(parseInt($(".wishlist_modal_count").text()) + 1)
             $('.loading-indicator').hide()
          }
      });
    }else{ // Remove product from wishlist
      var url =  '/event/'+$(this).data('event-id')+'/wishlist/remove_product'
       var data = {"_method": 'delete',variant_id: $(this).data('variant-id')}
      $.ajax({
          type: "POST",
          url: url,
          data: data,
          beforeSend: function(){ $('.loading-indicator').fadeIn('slow') },
          success: function(res) {
            $this.removeClass('product_added_btn').addClass('product_add_btn')
            $this.find('span:first').removeClass('glyphicon-ok remove').addClass('glyphicon-plus add');
            $("#wishlist-count").text(parseInt($("#wishlist-count").text()) - 1);
            $(".wishlist_modal_count").text(parseInt($(".wishlist_modal_count").text()) - 1)
             $('.loading-indicator').hide()
          }
      });
    }
    // alert($(this).parent('.product').attr('id'))
  })